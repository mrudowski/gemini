/* eslint quotes: ["error", "double", { "allowTemplateLiterals": true }] */

const en = {
  id: "en",
  title: "Trader of Stories – Chapter III",
  verbs: {
    buy: "Buy",
    clean: "Wash",
    close: "Close",
    enter: "Enter",
    examine: "Examine",
    fertlizerClean: "Pick up bags of fertilizer",
    fix: "Repair",
    fixDress: "Stitch dress with vine",
    followBirds: "Follow the birds",
    giveHerbs: "Give herbs",
    giveCookie: "Offer biscuits",
    giveBucket: "Put bucket away",
    go: "Go",
    horseRiding: "Offer a huskback ride",
    knock: "Knock",
    layDown: "Lie down",
    leave: "Leave",
    leaveEnd: "Leave (finish the game)",
    lookCloser: "Have a closer look",
    moveStone: "Pull stone out",
    open: "Open",
    pack: "Pack",
    prepareMeal: "Cook",
    putDown: "Put basin away",
    putDownBottles: "Put bottles away",
    sayGoodBye: "Say your goodbyes",
    saySorry: "Apologize",
    sculpt: "Sculpt",
    search: "Search",
    searchKids: "Search for the kids",
    startCase: "Begin trial",
    take: "Take",
    takeBucket: "Take bucket",
    takeFlower: "Pick a flower",
    takeLeaf: "Pick a leaf",
    takeStalk: "Pick a stalk",
    takeFlint: "Take fire striker",
    takeShell: "Take sapling",
    talk: "Talk",
    talkAlt: "Chat",
    tellingJoke: "Tell a joke",
    uncover: "Uncover",
    unpack: "Unpack",
    use: "Use",
    useWith: "Use with…",
    wait: "Wait",
    weeding: "Pull weeds",
    addItem: "Add element",
    removeItem: "Remove element",
    add: "Add",
    subtract: "Subtract",
    addKitchenItem: "Yes, I think I'll need this.",
    removeKitchenItem: "I don't have a use for this.",
  },

  inventory: {
    randomText: ["It won't work.", "I must be doing something wrong.", "It's just not working."],
    bottleWine: {
      examine: "A bottle of wine.",
    },
  },

  scenes: {
    // act I
    elmWorkshopByHazel: {
      stairs: {
        examine: "These stairs lead to my workshop.",
      },
      desk: {
        examine: "Elm is always so particular about order, about keeping his space organised. Everything has to be in its proper place.",
        canIHelp: "How's your work coming along? Can I lend a hand?",
        IHaveToUnderstand: "I have not yet understood what it is that I am attempting to achieve. I am grateful for the proposition in any case. I will remember it.",
      },
      elm: {
        examine: "Ever since Elm came upon the Grandchildren wandering the ruined Forest Bed, he's been relentlessly at work, trying to restore it. I should follow his example.",
        talk: {
          takeAMoment: "May I have your attention for a moment?",
          youAlreadyDid: "You have it now.",
          dontBeSoLiteral: "Literal, as always. How is it going? What are you working on now?",
          howIsYourWork: "If harmony is to return to the world, strict rules are needed. Rules to make it predictable. It is difficult to specify such rules. There has been much change since we have created it. Are you making any progress?",
          notTooEasy: "Not really. Every time I think I almost have it, the solution slips through my fingers again. Can we talk? I think we could both use it.",
          hazelEndDialog: "Well, I'm off to work, love. Maybe what we really need is a change in perspective. A fresh approach.",
          canWeTalk: "Can we talk?",
          discoveryOfTheGrandchildren: "Mind telling me again about how you found our children?",
          discoveryOfTheGrandchildrenAnswer: "Not at all. In my languid wandering through the Forest Bed I have encountered a sight to awaken my mind from stupor. On the cinders of the world the Grandchildren have built settlements. Despite obstacles, they continued to lead their lives. They would learn, develop, gradually cultivate the war-torn soil of the Forest Bed. This made me realize that not everything was lost. We could yet attain our Dream of the garden of happiness at the Oak's feet. I returned to the High Branches to bring you these news.",
          elmWork: "How's your work coming along? Can I lend a hand?",
          elmWorkAnswer: "I have not yet understood what it is that I am attempting to achieve. I am grateful for the proposition. I will remember it.",

          elmWorkAnswer2: "I find myself unable to solve a certain problem. The Forest Bed now differs from the design we dreamt for it so significantly that I cannot describe the processes taking place in it, let alone prognosticate. None of the correlations I know occurs.",
          elmWorkAnswer2b: "Maybe you're too attached to the original project. You said it yourself, the Forest Bed has changed. So should our approach. I'll be glad to have a look at your problem. I might notice something you missed.",
          hazelWork: "I've been wondering if you could advise me. As you know, all the greenery that thrived before the war has withered. I so wish to make the Forest Bed verdant, but the new plants must be hardier, able to thrive in harsh conditions. But with all these variables… If you could have a look? Maybe you'd see what I'm missing.",
          hazelWorkAnswer: "This is quite a difficult issue. The present environment of the Forest Bed differs greatly from our dream design. I shall assist you when I find a moment.",

          firstborn1: "Do you know what the others are doing?",
          firstborn2: "Good question. I think they're wandering the Forest Bed, each one trying to deal with our great loss in their own way. Only the two of us and Cedar keep to our workrooms, digging away for a solution… to all this.",
          firstborn3: "Ah, old friend Cedar. The three of us have not had the opportunity to hold a discussion for so long… We must visit him as soon as…",
          firstborn4: "We'll walk among the flowering branches of our Father yet, love. Don't give up hope.",

          workshopHazel1: "There is a certain… disarray characterizing your workroom. Should I, maybe, organize it? As you know, I should be happy to do it for you.",
          workshopHazel2: "Please don't, a messy room helps me think. Besides, if you put it all in order, I'd never be able to find anything again. You know what I'm like.",

          workshopElm1: "Have you ever thought to add a hint of… something? Make the room a little more cosy. I'll be glad to do it for you. Would be nice to distract myself from the ruins down there for a while.",
          workshopElm2: "I know you would accomplish wonders, my darling. Nevertheless, as you know, adornments impair my focus. I would not be able to work.",
        },
      },
    },

    elmWorkshopByElm: {
      elmStartDialog: "If the Forest Bed is to be restored, I must find the laws to describe it. This is the only way.",

      stairs: {
        examine: "This flight of stairs leads up to Hazel's workroom.",
      },
      desk: {
        examine: "My place of work.",
        examineSolved: "Hazel found the correlation by adding new parameters. This may be the method I am searching for. Owing to Hazel's help my inquiry has gained direction.",
      },
      hazel: {
        examine: "Hazel.",
        talk: {
          canWeTalk: "Can we talk?",
          elmWork: "How's your work coming along? Can I lend a hand?",
          elmWorkAnswer: "I have not understood what it is that I am attempting to achieve. I am grateful for the proposition in any case. I will remember it.",
          hazelWork: "How is your work advancing? Are you making progress?",
          hazelWorkAnswer: "I'm afraid not. I'd like to think on this some more, gather my thoughts. Later I might ask advice from your analytic mind, love.",
          hazelWork2: "May I be of any assistance in your task?",
        },
      },
    },

    hazelWorkshopByHazel: {
      cutscene1: "Oh, Father, is this possible? Is all not really lost? Can we still restore the world of our dreams?",
      onEnter1: "Can our dream, our garden of happiness at Your feet, be made real after all?",
      onEnter1b: "I believe it can. But fulfilment of the dream won't be brought about by idly staring through the window.",
      onEnter2: "If we are to restore the Forest Bed's ruined glory, flora must be re-established, which is my role. But the Forest Bed is less hospitable than it was, the old plants would not survive there. I must make new designs that will flourish in these conditions. Time to get to work.",
      table: {
        examine: "All the plants I created have withered. I must design new ones. I think I found the right method.",
        examineElm: "Elm removed some of the dividers. Why? How would that help? But I trust he knows what he's doing.",
        examineSolved: "That's incredible. I treated each plant as an individual, unique being, and that kept me from seeing the basic relationships. Now, thanks to Elm, I know how to go on.",
      },
      stairs: {
        examine: "The stairs down to Elm's workshop.",
      },
    },

    hazelTableByHazel: {
      onEnter: "By trial and error I found a number of plant models. They should be able to survive even in the inhospitable Forest Bed of the present. All that remains is to put them to work. Let's start with the simplest, a plant with only one type of element, a red flower.",
      onEnter2: "These correspondences… so many variables. Can the problem even be solved? I should ask Elm's advice.",
      equation1: {
        examine: "The correspondence I worked out. Now I need to adjust the numbers of all the elements.",
      },
      equation5: {
        examine: "These correspondences… so many variables. Can the problem even be solved? I should ask Elm's advice.",
      },
      boxes: {
        examine: "Each of these partitions will hold a specific type of plant element.",
        redFlowerBox: "Red flowers go here.",
        blueFlowerBox: "Blue flowers go here.",
        yellowFlowerBox: "Yellow flowers go here.",
        greenLeafBox: "Green leaves go here.",
        yellowLeafBox: "Yellow leaves go here.",
        purpleLeafBox: "Purple leaves go here.",
        blueStalkBox: "Blue stalks go here.",
        pinkStalkBox: "Pink stalks go here.",
        greenStalkBox: "Green stalks go here.",
      },
      equation1Solved: "Good. Now a different plant. Two types of elements this time. Red flowers, but the number will be different, and a blue stalk.",
      equation2Solved: "It works. Let's try another one. This plant will have two types of parts, as well, but in a more complex equation.",
      equation3Solved: "Perfect. Oh. Things are getting complicated. I have more types of elements now.",
      equation4Solved: "Done. Everything's working. Let's try the next desi… oh. So many variables. I think I should ask Elm's advice.",
    },

    hazelTableByElm: {
      onEnter: "Let me see. On one side Hazel has listed the laws regulating the physiology of plants, very well. I see three parameters. On the other side… nine compartments? Hazel creates arbitrary distinctions. If we only leave three, everything becomes logical. Good, now to find the solution.",
      equation5: {
        examine: "The laws define the properties Hazel wants her plants to have. Basing on them, I can specify the values of the parameters.",
      },
      boxes: {
        examine: "A visual representation of the values of the parameters. The number of instances in each compartment should equal the value written in the equation.",
      },
      equationSolved: "Yes, everything fits now.",
      equationSolved2: "That's incredible. How did you do this?",
      equationSolved3: "I reduced your plant elements to their basic functions, in abstraction from the unnecessary details. Then I universalized the functions. By this method I was able to find a law to describe all of them.",
      equationSolved4: "I've been treating every flower, leaf and stalk individually and lost the correspondences between them in this thicket… Thank you. Now I know how to go on. Thanks to your laws I'll be able to create plants that will thrive in the changed Forest Bed, I can make our dream garden flourish again. And I owe it all to you.",
      equationSolved5: "No, Hazel. I merely helped a little. You are the one to restore our world to its bygone glory. But now, by your leave, I shall go back to work. You have also barely started.",
    },

    elmDeskByElm: {
      onEnter: "On one side there is the plot of the dependence observed. On the other side there is the equation to describe it. I must now find the value of the parameter, using the counting frame.",
      equation1: {
        examine: "The law to describe the phenomenon I have been observing.",
      },
      abacus: {
        examine: "Beads on the counting frame serve to represent the parameters in my equation.",
      },
      chart: {
        examine: "I have plotted the observed correlation on the paper. The thread symbolises the correlation being described by the law I defined, with the parameter value represented by the number of beads on the counting frame. They ought to match.",
        examine2: "The observational data does not match my defined law, no matter what parameter I assume. Maybe Hazel can make sense of this.",
      },
      equationSolved: "Logical, as I thought. Next correlation.",
      equationSolved2: "Perfect. As I thought. Next.",
      equationSolved2B: "What is this? Quite an odd relation, but such is the observational data. Is a match even possible within the given data set?",
      equationSolved3: "There we go. But I'd better test this out some more before showing my results to Elm. Just to be sure.",
      equationSolved4: "Ha, got it. I knew my intuition was right. Well, then, one more test and I can bring Elm the good news.",
      equationSolved5: "There. Perfect fit.",
      howDidYouDo: "Impossible. How did you do this? You have added a new parameter, but…",
      theForestbedChanged: "The Forest Bed has changed, love. Your laws won't match reality unless you allow for the exceptions.",
      butItwWantBeLaw: "They would cease to be laws then. We must reduce the phenomena to their basic components, to the absolute minimum.",
      notNecceserly: "Not all of them. The Forest Bed isn't some closed space where perfect spheres move along perfectly straight lines, it's a complex ecosystem. More complex than it used to be. Therefore, to describe it, we need complex laws. We need to allow for a variety of processes going on at the same time, affecting one another.",
      maybeYouAre: "Maybe… I cannot deny the facts, and your match is perfect. Thank you. I shall return to my work with even more enthusiasm.",
      dontMentionIt: "Think nothing of it. I have to go back to my plants.",
      iDontWantTo: "Sorry,  I really don't like to interrupt, but we're here.",
    },

    elmDeskByHazel: {
      onEnter: "Ugh, no wonder Elm's having trouble. It's all so tightly strung, I'm afraid to touch anything. That's not an environment for creative thinking.",
      onEnter2: "Let's see. Elm said this plot represents the correspondence he's trying to describe with the equation here. He tried it with a single parameter, but this won't work. How about when we add another?",
      equation1: {
        examine: "Elm is trying to describe the correspondence he's working on with this equation. I added a parameter. Let's see if I can get a match.",
      },
      abacusWhite: {
        examine: "I have two parameters now, the counting frame will come in handy. The white stones represent the value of parameter A.",
      },
      abacusBlack: {
        examine: "I have two parameters now, the counting frame will come in handy. The black stones represent the value of parameter B.",
      },
      chart: {
        examine: "I should be able to match the graphs now. All I need is to adjust the parameters.",
      },
    },

    hazelWorkshopByElm: {
      table: {
        examine: "Hazel surrounds herself with chaos. She seems to draw inspiration from it. Counterintuitive as it is, her method has often proved its merits.",
        examineSolved: "The reduction of every element to its basic function will allow us to describe it with our laws. This shall make the reconstruction of our world possible.",
      },
      stairs: {
        examine: "This flight of stairs leads down to my workshop.",
      },
    },
  },

  actors: {
    elm: "Elm",
    hazel: "Hazel",
  },
  talkOptions: {
    accusation: "Accusation",
    adaptation: "Adaptation",
    adalbert: "Adalbert",
    amka: "Amka",
    amkaSljed: "Amka and Sljed",
    arrival: "Arrival",
    ashur: "Ashur",
    ashurMore: "More about Ashur",
    assistant: "Assistant",
    barkStudy: "Studying in Bark",
    bart: "Bart",
    birds: "Birds",
    bulbafar: "Bulbafar",
    caughtBreath: "Caught Breath",
    cave: "The cave",
    caveSilent: "The cave",
    cedarWork: "Cedar's work",
    cedarWorkByElm: "Cedar's work",
    cookingBook: "Cookbook",
    coni: "Coni",
    coniKids: "Coni",
    coniFire: "Coni and fire",
    coniMood: "Coni's mood",
    coniHappy: "Coni",
    dessert: "Dessert",
    discoveryOfTheGrandchildren: "Discovery of Grandchildren",
    dreamStudy: "Dream scholars",
    drwolffe: "Dr Wolffe",
    elmWork: "Elm's work",
    elmWork2: "Elm's work",
    elmWorkByElm: "Elm's work",
    enti: "Enti",
    entiHappy: "Enti",
    father: "Dad",
    fatherDeath: "Dad's death",
    firstborn: "The First Born",
    food: "Food",
    foodSilent: "Food",
    fryme: "Fryme",
    fryme2: "Fryme",
    frymeSober: "Fryme",
    gaetana: "Gaetana",
    garden: "Garden",
    grandchildren: "Grandchildren",
    grandparents: "Grandparents",
    grandpa: "Grandpa",
    guardian: "Guardian",
    guardianSword: "Guardian's sword",
    hazelWork: "Hazel's work",
    hazelWork2: "Hazel's work",
    hazelWorkByElm: "Hazel's work",
    hazelDay: "Hazel's Feast",
    herbsWine: "Herbs for winemaking",
    hvarfa: "Hvarfa",
    jofun: "Jofun",
    kemma: "Kemma",
    kesaj: "Kesaj",
    kids: "Kids",
    kja: "Kja",
    liarks: "Noxers",
    manure: "Manure",
    meadows: "Meadows",
    messenger: "The Messenger",
    monsters: "Monstrous noxers",
    mother: "Mum",
    motherDeath: "Mum's death",
    myo: "Myosotis",
    myoSober: "Myosotis",
    myoKids: "Myosotis",
    myoHappy: "Myosotis",
    myoSilent: "Myosotis",
    myoMore: "More about Myo",
    nacel: "Nacel",
    neesan: "Neesan",
    neesanDeal: "Deal with Neesan",
    neesanDeal2: "More about the deal with Neesan",
    neesanKids: "Neesan",
    neesanHappy: "Neesan",
    neesanSober: "Neesan",
    painting: "Painting",
    parents: "My parents",
    pastures: "Pastures",
    rain: "Rain",
    rasho: "Rasho",
    rashoIllness: "Rasho's illness",
    recipeCookie: "Biscuits recipe",
    repair: "Repair",
    return: "Return",
    reyle: "Reyle",
    reyleSilent: "Reyle",
    reyleMother: "Reyle's mother",
    reyleMissing: "Reyle's disappearance",
    reyleMore: "More about Reyle",
    richter: "Judge",
    room: "Room",
    roomHappy: "Room",
    salammon: "Salammon",
    seed: "Seeds",
    ashurSeed: "Birch for Ashur",
    servants: "Servants",
    sideProject: "Another task",
    skella: "Skela",
    skellaKids: "Skela",
    skellaFamily: "Skela's family",
    snaigs: "Husks",
    snigill: "Snigill",
    snigillHarm: "Snigill's grudge",
    snigillFamily: "Snigill's family",
    sljed: "Sljed",
    sljedAmka: "Sljed and Amka",
    story: "Story",
    targov: "Targov",
    teaching: "Learning",
    tonli: "Tonli",
    toys: "Toys",
    trap: "Trap",
    travel: "Travels",
    trees: "Trees",
    university: "University",
    veig: "Veig",
    veigDeal: "Deal with Veig",
    vozi: "Vozi",
    voziSilent: "Vozi",
    wine: "Wine",
    work: "Work",
    workshop: "Workshop",
    xander: "Xander",
    end: "FINISH",

    accept: "Agree",
    decline: "Refuse",

    coniFather: "Coni's father",
    entiFather: "Enti - father?",
    veigFather: "Veig - father?",
    ourRelation: "Our relationship",
    travelBark: "Leaving for Bark",
    travelSljed: "Sljed about me leaving",
    adalbertVisit: "Living with Adalbert",
    letters: "Letters",
    myoBirch: "My birch",
    bottleEnd: "Bottle is empty",
    bottleEndGo: "FINISH",

    reyleFatherWho: "Father of Reyle's child",
    childBirth: "Reyle's childbirth",
    reyleEscape: "Reyle's escape",
    hvarfaHelp: "Hvarfa's help",
  },
  talkOptionsAlt: {
    you: "About you",
  },
  intro: {
    gameBy: "game by Rudowski brothers",
  },
  mainMeMnu: {
    continueGame: "Continue",
    credits: "Credits",
    gameBy: "game by Rudowski brothers",
    importGame: "Import saved game",
    language: "Language",
    loadGame: "Load game",
    newGame: "Start new game",
    newGameConfirmation: "Starting a new game will overwrite the current autosave and progress. Are you sure you want to do that?",
    sound: "Sound",
    supportUs: "If you like our games, please consider supporting us in our work :) Thank you",
  },
  credits: {
    story: {
      header: "Story and graphics",
      author: "Marek Rudowski",
    },
    code: {
      header: "Programming and gem.ini engine",
      author: "Marcin Rudowski",
    },
    music: {
      header: "Music",
      author: "Sergiu Muresan",
    },
    editor: {
      header: "Editing of the Polish dialogues and English translation",
      author: "Maria Barć",
    },
    translationSpanish: {
      header: "Spanish translation",
      author: "Ander García Landaluze",
    },
    translationGerman: {
      header: "German translation, music and sound",
      author: "Christopher A. Summer",
    },
    patrons: {
      header: "We should like to extend our warmest thanks to our patrons, who support us, that being",
      info: "(alphabetically)",
      list: "A, A. v.d. Berg van Saparoea, Aaron Aldana, Acaplaamail, Alex DiLauro, Alexander Esteves, Andrei Orasanu, Ankit Pandey, Anthony Barrett, Awguscia, Bart, Benjamin Goh, Bulbafar, Butter melk, Cat, Christopher A. Summer, Davidk, Drea S., Duc Anh Le, Dumbo adorabilis, Ekurius Oblivious, Elise Pimenta, Epsi_C, Essence Weaver, Feduje, Franziska Hömke, Giorgos miras, Ian, Ivan Ivanov, Jacob, Jade Barefoot, Jakub Staszewski, James Richards, Jezacain, John Jones, Joseph Alan Raines, Josh Nathan Parker, Justin Nguyen, K MI, Kate Wood, Kath TheDragon, Katie, Laura Knam, Laura McGinnis, Liliana, Linden Condon, Marcin, Marck Ello, Marcus Strauss, Mary Norwood, Mathias Rekowski, Matthew Wolff Simon, Mazko, Megalodon99, Michael, Nickolas Teo, Noortje, Oscarmilde, OUTBACK, PandoraQuill, Pelikano, Penggers, Prachi Singh, Ralf Krüger, Randomstranger, Sarah Ulrich, Seredade Purplerabbits, Shannon Mooney, SimaV, Soli Alpert, Stefan Wallner, Steve, Suiti, Super Anon, Theresa A. Wilson, Tim Steele, Timur Kazbekov, Travis Rex, Uei, Xhunter, YunaCalista, Zachary Groettum, Zachary Johnson, Zeke Mullins-Tait, Zlata Grakov",
    },

    thanks: "We would like to thank our loved ones - family and friends - for their support, which made all this possible.",
  },
  notebook: {
    notes: {
      looseNotes: {
        roomNotesBooks: "I loved reading. Myosotis - a bookworm.",
      },
    },
    tabs: {
      todoList: "My to-do list",
      culinaryRecipes: "Recipes",
      memories: "Memories about me",
    },
  },
  herbarium: {
    pages: {
      ostokrzyw: {
        title: "Stinging thistle",
        p1: "Also called milk nettle, the stinging thistle grows abundant in forests, among ruins, in deserted settlements and on old battlefields, its stalks guarding the dead, as their merest touch sends fire through one's limb.  While harvesting them, it is necessary to wear sturdy gloves. Harvested, they must be blanched in hot water, for touching raw stalks may cause pain that returns even after many Breaths. Some say, however, this makes the blood run quicker.",
        p2: "Its leaves are large, of arrowhead shape. Flowers large and striking, with ample sepals, but puny petals that leave the stamena quite bare.",
        p3: "If you have overindulged yourself in wine, brew the milk nettle leaves with a fresh, grated stalk of florence. Sipped slowly, this concoction shall ease your illness.",
        p4: "The stalks, well-cooked, make for a pleasing and nourishing pot herb. They can be also used in soups.",
      },
    },
  },
  ui: {
    commons: {
      yes: "Yes",
      no: "No",
      cancel: "Cancel",
      close: "Close",
    },
    inGameMenu: {
      exitToTitle: "Exit to title",
      exportGame: "Export saved game",
      returnToGame: "Return to game",
      saveGame: "Save game",
      sound: "Sound",
      soundOff: "Off",
      soundOn: "On",
    },
    saveGameSlot: {
      autoSave: "[autosave]",
      empty: "[empty]",
    },
    saveGameModal: {
      prompt1: "This game saves your progress automatically",
      prompt2: "Here you can save the game additionally under a chosen filename.",
      save: "Save",
      saveTitleDialogPrompt: "Enter filename and save:",
    },
    loadGameModal: {
      prompt: "Choose savefile to load:",
      loadGameConfirmation: "Loading a saved game will overwrite the current autosave and progress. Are you sure you want to do that?",
    },
    exportGameModal: {
      prompt1: "This game saves your progress automatically",
      prompt2: "Here you can see it as a piece of good, old-fashioned 'access code'  ;-) Copy it as backup or if you want to move your game to another computer.",
      copyToClipboard: "Copy code to clipboard.",
      codeCopied: "Done!",
    },
    importGameModal: {
      prompt1: "Here you can restore your game from backup.",
      prompt2: "Copy and paste the „access code”, then load the game.",
      importSaveGame: "Load the game.",
      wrongAccessCode: "„Access code” invalid.",
      importGameConfirmation: "Loading a saved game will overwrite the current autosave and progress. Are you sure you want to do that?",
    },
    cookiesInfo: "For statistical purposes and for your playing convenience, we use cookies. If you consent to that, do not change your browser settings pertaining to cookies.",
  },
};

export default en;

export type ILanguageObjectType = typeof en;
